<?xml version="1.0" encoding="UTF-8"?>
<!--
  - \file   Main.xml
  - \author Boubacar DIENE <boubacar.diene@gmail.com>
  - \date   September 04, 2016

  - \brief  This is the main config file i.e the entry point of the application.

            The application parses Main.xml first mainly to retrieve path to
            modules' xml config files. Depending on whether the corresponding
            module is enabled or not, those config files are then parsed so as
            to fill in internal structures.
-->

<Main>

  <!--
    General

    - appDataDir      : Files created at runtime are stored in this directory (screenshots, ...)

    - xmlRootDir      : Concatenated to xmlFile to get the real path to config files

    - keepAliveMethod : Method to use to keep app running
                        0 => Events_based    : Can be used when keyEvents are handled by graphics module
                                               E.g: Click on Close button or Press Escape key
                        1 => Semaphore_based : Can be used when you want to handle keyEvents differently.
                                               To avoid infinite loop, you have to call "sem_post()" when app
                                               needs to be stopped
                        2 => Timer_based     : Can be used when you want to run the application in a limited
                                               time

                                               Note: Attribute timeout_s="<value in seconds>" is ignored if
                                               method is not Timer_based.
  -->
  <General appDataDir="/tmp/" xmlRootDir="./out/mmstreamer/res/" keepAliveMethod="0" timeout_s="10" />

  <!--
    Modules

    4 independant modules are currently defined:

        + Video    : Capture video signal from video devices
        + Servers  : Stream video frames using unix or inet socket
        + Clients  : Get video from a local or a remote streamer
        + Graphics : Locally display video and control some features

    - enable  : Choose whether to initialize the module or not
                0 => NO
                1 => YES

    - autoStart : Choose to automatically or manually start the module
                  0 => Manual start i.e it is just initialized in Main.c
                       You can start it whenever and where you want
                  1 => Automatic start i.e iniatialized and started in Main.c

                  Note: autoStart="1" does not need change an update of the source
                        code as it is already handled (Cf. Main.c)

    - xmlFile : Path to the config file of the module
  -->
  <Graphics enable="1" autoStart="1" xmlFile="configs/Graphics.xml"/>
  <Video    enable="1" autoStart="1" xmlFile="configs/Video.xml"   />
  <Servers  enable="1" autoStart="1" xmlFile="configs/Servers.xml" />
  <Clients  enable="0" autoStart="1" xmlFile="configs/Clients.xml" />

</Main>

